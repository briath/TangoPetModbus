/*----- PROTECTED REGION ID(Pet7019::DynAttrUtils.cpp) ENABLED START -----*/
//=============================================================================
//
// file :        Pet7019DynAttrUtils.cpp
//
// description : Dynamic attributes utilities file for the Pet7019 class
//
// project :     
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
//
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#include <Pet7019.h>
#include <Pet7019Class.h>

/*----- PROTECTED REGION END -----*/	//	Pet7019::DynAttrUtils.cpp

//================================================================
//  Attributes managed are:
//================================================================
//  valueDO           |  Tango::DevBoolean	Scalar
//  enabledPowerOnDO  |  Tango::DevBoolean	Scalar
//  enabledSafeDO     |  Tango::DevBoolean	Scalar
//  functionAI        |  Tango::DevBoolean	Scalar
//  valueAI           |  Tango::DevShort	Scalar
//  rangeAI           |  Tango::DevUChar	Scalar
//================================================================

//	For compatibility reason, this file (Pet7019DynAttrUtils)
//	manage also the dynamic command utilities.
//================================================================
//  The following table gives the correspondence
//  between command and method names.
//
//  Command name  |  Method name
//================================================================
//================================================================

namespace Pet7019_ns
{
//=============================================================
//	Add/Remove dynamic attribute methods
//=============================================================

//--------------------------------------------------------
/**
 *	Add a valueDO dynamic attribute.
 *
 *  parameter attname: attribute name to be cretated and added.
 */
//--------------------------------------------------------
void Pet7019::add_valueDO_dynamic_attribute(string attname)
{
	//	Attribute : valueDO
	valueDOAttrib	*valuedo = new valueDOAttrib(attname);
	Tango::UserDefaultAttrProp	valuedo_prop;
	//	description	not set for valueDO
	//	label	not set for valueDO
	//	unit	not set for valueDO
	//	standard_unit	not set for valueDO
	//	display_unit	not set for valueDO
	//	format	not set for valueDO
	//	max_value	not set for valueDO
	//	min_value	not set for valueDO
	//	max_alarm	not set for valueDO
	//	min_alarm	not set for valueDO
	//	max_warning	not set for valueDO
	//	min_warning	not set for valueDO
	//	delta_t	not set for valueDO
	//	delta_val	not set for valueDO
	
	/*----- PROTECTED REGION ID(Pet7019::att_valueDO_dynamic_attribute) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	Pet7019::att_valueDO_dynamic_attribute
	valuedo->set_default_properties(valuedo_prop);
	//	Not Polled
	valuedo->set_disp_level(Tango::OPERATOR);
	//	Not Memorized
	valueDO_data.insert(make_pair(attname, false));
	add_attribute(valuedo);
}
//--------------------------------------------------------
/**
 *	remove a valueDO dynamic attribute.
 *
 *  parameter attname: attribute name to be removed.
 */
//--------------------------------------------------------
void Pet7019::remove_valueDO_dynamic_attribute(string attname)
{
	remove_attribute(attname, true);
	map<string,Tango::DevBoolean>::iterator ite;
    if ((ite=valueDO_data.find(attname))!=valueDO_data.end())
    {
    	/*----- PROTECTED REGION ID(Pet7019::remove_valueDO_dynamic_attribute) ENABLED START -----*/
    	
    	/*----- PROTECTED REGION END -----*/	//	Pet7019::remove_valueDO_dynamic_attribute
		valueDO_data.erase(ite);
	}
}
//--------------------------------------------------------
/**
 *	Add a enabledPowerOnDO dynamic attribute.
 *
 *  parameter attname: attribute name to be cretated and added.
 */
//--------------------------------------------------------
void Pet7019::add_enabledPowerOnDO_dynamic_attribute(string attname)
{
	//	Attribute : enabledPowerOnDO
	enabledPowerOnDOAttrib	*enabledpowerondo = new enabledPowerOnDOAttrib(attname);
	Tango::UserDefaultAttrProp	enabledpowerondo_prop;
	//	description	not set for enabledPowerOnDO
	//	label	not set for enabledPowerOnDO
	//	unit	not set for enabledPowerOnDO
	//	standard_unit	not set for enabledPowerOnDO
	//	display_unit	not set for enabledPowerOnDO
	//	format	not set for enabledPowerOnDO
	//	max_value	not set for enabledPowerOnDO
	//	min_value	not set for enabledPowerOnDO
	//	max_alarm	not set for enabledPowerOnDO
	//	min_alarm	not set for enabledPowerOnDO
	//	max_warning	not set for enabledPowerOnDO
	//	min_warning	not set for enabledPowerOnDO
	//	delta_t	not set for enabledPowerOnDO
	//	delta_val	not set for enabledPowerOnDO
	
	/*----- PROTECTED REGION ID(Pet7019::att_enabledPowerOnDO_dynamic_attribute) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	Pet7019::att_enabledPowerOnDO_dynamic_attribute
	enabledpowerondo->set_default_properties(enabledpowerondo_prop);
	//	Not Polled
	enabledpowerondo->set_disp_level(Tango::OPERATOR);
	//	Not Memorized
	enabledPowerOnDO_data.insert(make_pair(attname, false));
	add_attribute(enabledpowerondo);
}
//--------------------------------------------------------
/**
 *	remove a enabledPowerOnDO dynamic attribute.
 *
 *  parameter attname: attribute name to be removed.
 */
//--------------------------------------------------------
void Pet7019::remove_enabledPowerOnDO_dynamic_attribute(string attname)
{
	remove_attribute(attname, true);
	map<string,Tango::DevBoolean>::iterator ite;
    if ((ite=enabledPowerOnDO_data.find(attname))!=enabledPowerOnDO_data.end())
    {
    	/*----- PROTECTED REGION ID(Pet7019::remove_enabledPowerOnDO_dynamic_attribute) ENABLED START -----*/
    	
    	/*----- PROTECTED REGION END -----*/	//	Pet7019::remove_enabledPowerOnDO_dynamic_attribute
		enabledPowerOnDO_data.erase(ite);
	}
}
//--------------------------------------------------------
/**
 *	Add a enabledSafeDO dynamic attribute.
 *
 *  parameter attname: attribute name to be cretated and added.
 */
//--------------------------------------------------------
void Pet7019::add_enabledSafeDO_dynamic_attribute(string attname)
{
	//	Attribute : enabledSafeDO
	enabledSafeDOAttrib	*enabledsafedo = new enabledSafeDOAttrib(attname);
	Tango::UserDefaultAttrProp	enabledsafedo_prop;
	//	description	not set for enabledSafeDO
	//	label	not set for enabledSafeDO
	//	unit	not set for enabledSafeDO
	//	standard_unit	not set for enabledSafeDO
	//	display_unit	not set for enabledSafeDO
	//	format	not set for enabledSafeDO
	//	max_value	not set for enabledSafeDO
	//	min_value	not set for enabledSafeDO
	//	max_alarm	not set for enabledSafeDO
	//	min_alarm	not set for enabledSafeDO
	//	max_warning	not set for enabledSafeDO
	//	min_warning	not set for enabledSafeDO
	//	delta_t	not set for enabledSafeDO
	//	delta_val	not set for enabledSafeDO
	
	/*----- PROTECTED REGION ID(Pet7019::att_enabledSafeDO_dynamic_attribute) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	Pet7019::att_enabledSafeDO_dynamic_attribute
	enabledsafedo->set_default_properties(enabledsafedo_prop);
	//	Not Polled
	enabledsafedo->set_disp_level(Tango::OPERATOR);
	//	Not Memorized
	enabledSafeDO_data.insert(make_pair(attname, false));
	add_attribute(enabledsafedo);
}
//--------------------------------------------------------
/**
 *	remove a enabledSafeDO dynamic attribute.
 *
 *  parameter attname: attribute name to be removed.
 */
//--------------------------------------------------------
void Pet7019::remove_enabledSafeDO_dynamic_attribute(string attname)
{
	remove_attribute(attname, true);
	map<string,Tango::DevBoolean>::iterator ite;
    if ((ite=enabledSafeDO_data.find(attname))!=enabledSafeDO_data.end())
    {
    	/*----- PROTECTED REGION ID(Pet7019::remove_enabledSafeDO_dynamic_attribute) ENABLED START -----*/
    	
    	/*----- PROTECTED REGION END -----*/	//	Pet7019::remove_enabledSafeDO_dynamic_attribute
		enabledSafeDO_data.erase(ite);
	}
}
//--------------------------------------------------------
/**
 *	Add a functionAI dynamic attribute.
 *
 *  parameter attname: attribute name to be cretated and added.
 */
//--------------------------------------------------------
void Pet7019::add_functionAI_dynamic_attribute(string attname)
{
	//	Attribute : functionAI
	functionAIAttrib	*functionai = new functionAIAttrib(attname);
	Tango::UserDefaultAttrProp	functionai_prop;
	//	description	not set for functionAI
	//	label	not set for functionAI
	//	unit	not set for functionAI
	//	standard_unit	not set for functionAI
	//	display_unit	not set for functionAI
	//	format	not set for functionAI
	//	max_value	not set for functionAI
	//	min_value	not set for functionAI
	//	max_alarm	not set for functionAI
	//	min_alarm	not set for functionAI
	//	max_warning	not set for functionAI
	//	min_warning	not set for functionAI
	//	delta_t	not set for functionAI
	//	delta_val	not set for functionAI
	
	/*----- PROTECTED REGION ID(Pet7019::att_functionAI_dynamic_attribute) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	Pet7019::att_functionAI_dynamic_attribute
	functionai->set_default_properties(functionai_prop);
	//	Not Polled
	functionai->set_disp_level(Tango::OPERATOR);
	functionai->set_memorized();
	functionai->set_memorized_init(true);
	functionAI_data.insert(make_pair(attname, false));
	add_attribute(functionai);
}
//--------------------------------------------------------
/**
 *	remove a functionAI dynamic attribute.
 *
 *  parameter attname: attribute name to be removed.
 */
//--------------------------------------------------------
void Pet7019::remove_functionAI_dynamic_attribute(string attname)
{
	remove_attribute(attname, true);
	map<string,Tango::DevBoolean>::iterator ite;
    if ((ite=functionAI_data.find(attname))!=functionAI_data.end())
    {
    	/*----- PROTECTED REGION ID(Pet7019::remove_functionAI_dynamic_attribute) ENABLED START -----*/
    	
    	/*----- PROTECTED REGION END -----*/	//	Pet7019::remove_functionAI_dynamic_attribute
		functionAI_data.erase(ite);
	}
}
//--------------------------------------------------------
/**
 *	Add a valueAI dynamic attribute.
 *
 *  parameter attname: attribute name to be cretated and added.
 */
//--------------------------------------------------------
void Pet7019::add_valueAI_dynamic_attribute(string attname)
{
	//	Attribute : valueAI
	valueAIAttrib	*valueai = new valueAIAttrib(attname);
	Tango::UserDefaultAttrProp	valueai_prop;
	//	description	not set for valueAI
	//	label	not set for valueAI
	//	unit	not set for valueAI
	//	standard_unit	not set for valueAI
	//	display_unit	not set for valueAI
	//	format	not set for valueAI
	//	max_value	not set for valueAI
	//	min_value	not set for valueAI
	//	max_alarm	not set for valueAI
	//	min_alarm	not set for valueAI
	//	max_warning	not set for valueAI
	//	min_warning	not set for valueAI
	//	delta_t	not set for valueAI
	//	delta_val	not set for valueAI
	
	/*----- PROTECTED REGION ID(Pet7019::att_valueAI_dynamic_attribute) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	Pet7019::att_valueAI_dynamic_attribute
	valueai->set_default_properties(valueai_prop);
	//	Not Polled
	valueai->set_disp_level(Tango::OPERATOR);
	//	Not Memorized
	valueAI_data.insert(make_pair(attname, 0));
	add_attribute(valueai);
}
//--------------------------------------------------------
/**
 *	remove a valueAI dynamic attribute.
 *
 *  parameter attname: attribute name to be removed.
 */
//--------------------------------------------------------
void Pet7019::remove_valueAI_dynamic_attribute(string attname)
{
	remove_attribute(attname, true);
	map<string,Tango::DevShort>::iterator ite;
    if ((ite=valueAI_data.find(attname))!=valueAI_data.end())
    {
    	/*----- PROTECTED REGION ID(Pet7019::remove_valueAI_dynamic_attribute) ENABLED START -----*/
    	
    	/*----- PROTECTED REGION END -----*/	//	Pet7019::remove_valueAI_dynamic_attribute
		valueAI_data.erase(ite);
	}
}
//--------------------------------------------------------
/**
 *	Add a rangeAI dynamic attribute.
 *
 *  parameter attname: attribute name to be cretated and added.
 */
//--------------------------------------------------------
void Pet7019::add_rangeAI_dynamic_attribute(string attname)
{
	//	Attribute : rangeAI
	rangeAIAttrib	*rangeai = new rangeAIAttrib(attname);
	Tango::UserDefaultAttrProp	rangeai_prop;
	//	description	not set for rangeAI
	//	label	not set for rangeAI
	//	unit	not set for rangeAI
	//	standard_unit	not set for rangeAI
	//	display_unit	not set for rangeAI
	//	format	not set for rangeAI
	//	max_value	not set for rangeAI
	//	min_value	not set for rangeAI
	//	max_alarm	not set for rangeAI
	//	min_alarm	not set for rangeAI
	//	max_warning	not set for rangeAI
	//	min_warning	not set for rangeAI
	//	delta_t	not set for rangeAI
	//	delta_val	not set for rangeAI
	
	/*----- PROTECTED REGION ID(Pet7019::att_rangeAI_dynamic_attribute) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	Pet7019::att_rangeAI_dynamic_attribute
	rangeai->set_default_properties(rangeai_prop);
	//	Not Polled
	rangeai->set_disp_level(Tango::OPERATOR);
	rangeai->set_memorized();
	rangeai->set_memorized_init(true);
	rangeAI_data.insert(make_pair(attname, 0));
	add_attribute(rangeai);
}
//--------------------------------------------------------
/**
 *	remove a rangeAI dynamic attribute.
 *
 *  parameter attname: attribute name to be removed.
 */
//--------------------------------------------------------
void Pet7019::remove_rangeAI_dynamic_attribute(string attname)
{
	remove_attribute(attname, true);
	map<string,Tango::DevUChar>::iterator ite;
    if ((ite=rangeAI_data.find(attname))!=rangeAI_data.end())
    {
    	/*----- PROTECTED REGION ID(Pet7019::remove_rangeAI_dynamic_attribute) ENABLED START -----*/
    	
    	/*----- PROTECTED REGION END -----*/	//	Pet7019::remove_rangeAI_dynamic_attribute
		rangeAI_data.erase(ite);
	}
}


//============================================================
//	Tool methods to get pointer on attribute data buffer 
//============================================================
//--------------------------------------------------------
/**
 *	Return a pointer on valueDO data.
 *
 *  parameter attname: the specified attribute name.
 */
//--------------------------------------------------------
Tango::DevBoolean *Pet7019::get_valueDO_data_ptr(string &name)
{
	map<string,Tango::DevBoolean>::iterator ite;
    if ((ite=valueDO_data.find(name))==valueDO_data.end())
    {
		TangoSys_OMemStream	tms;
		tms << "Dynamic attribute " << name << " has not been created";
		Tango::Except::throw_exception(
					(const char *)"ATTRIBUTE_NOT_FOUND",
					tms.str().c_str(),
					(const char *)"Pet7019::get_valueDO_data_ptr()");
    }
	return  &(ite->second);
}
//--------------------------------------------------------
/**
 *	Return a pointer on enabledPowerOnDO data.
 *
 *  parameter attname: the specified attribute name.
 */
//--------------------------------------------------------
Tango::DevBoolean *Pet7019::get_enabledPowerOnDO_data_ptr(string &name)
{
	map<string,Tango::DevBoolean>::iterator ite;
    if ((ite=enabledPowerOnDO_data.find(name))==enabledPowerOnDO_data.end())
    {
		TangoSys_OMemStream	tms;
		tms << "Dynamic attribute " << name << " has not been created";
		Tango::Except::throw_exception(
					(const char *)"ATTRIBUTE_NOT_FOUND",
					tms.str().c_str(),
					(const char *)"Pet7019::get_enabledPowerOnDO_data_ptr()");
    }
	return  &(ite->second);
}
//--------------------------------------------------------
/**
 *	Return a pointer on enabledSafeDO data.
 *
 *  parameter attname: the specified attribute name.
 */
//--------------------------------------------------------
Tango::DevBoolean *Pet7019::get_enabledSafeDO_data_ptr(string &name)
{
	map<string,Tango::DevBoolean>::iterator ite;
    if ((ite=enabledSafeDO_data.find(name))==enabledSafeDO_data.end())
    {
		TangoSys_OMemStream	tms;
		tms << "Dynamic attribute " << name << " has not been created";
		Tango::Except::throw_exception(
					(const char *)"ATTRIBUTE_NOT_FOUND",
					tms.str().c_str(),
					(const char *)"Pet7019::get_enabledSafeDO_data_ptr()");
    }
	return  &(ite->second);
}
//--------------------------------------------------------
/**
 *	Return a pointer on functionAI data.
 *
 *  parameter attname: the specified attribute name.
 */
//--------------------------------------------------------
Tango::DevBoolean *Pet7019::get_functionAI_data_ptr(string &name)
{
	map<string,Tango::DevBoolean>::iterator ite;
    if ((ite=functionAI_data.find(name))==functionAI_data.end())
    {
		TangoSys_OMemStream	tms;
		tms << "Dynamic attribute " << name << " has not been created";
		Tango::Except::throw_exception(
					(const char *)"ATTRIBUTE_NOT_FOUND",
					tms.str().c_str(),
					(const char *)"Pet7019::get_functionAI_data_ptr()");
    }
	return  &(ite->second);
}
//--------------------------------------------------------
/**
 *	Return a pointer on valueAI data.
 *
 *  parameter attname: the specified attribute name.
 */
//--------------------------------------------------------
Tango::DevShort *Pet7019::get_valueAI_data_ptr(string &name)
{
	map<string,Tango::DevShort>::iterator ite;
    if ((ite=valueAI_data.find(name))==valueAI_data.end())
    {
		TangoSys_OMemStream	tms;
		tms << "Dynamic attribute " << name << " has not been created";
		Tango::Except::throw_exception(
					(const char *)"ATTRIBUTE_NOT_FOUND",
					tms.str().c_str(),
					(const char *)"Pet7019::get_valueAI_data_ptr()");
    }
	return  &(ite->second);
}
//--------------------------------------------------------
/**
 *	Return a pointer on rangeAI data.
 *
 *  parameter attname: the specified attribute name.
 */
//--------------------------------------------------------
Tango::DevUChar *Pet7019::get_rangeAI_data_ptr(string &name)
{
	map<string,Tango::DevUChar>::iterator ite;
    if ((ite=rangeAI_data.find(name))==rangeAI_data.end())
    {
		TangoSys_OMemStream	tms;
		tms << "Dynamic attribute " << name << " has not been created";
		Tango::Except::throw_exception(
					(const char *)"ATTRIBUTE_NOT_FOUND",
					tms.str().c_str(),
					(const char *)"Pet7019::get_rangeAI_data_ptr()");
    }
	return  &(ite->second);
}


//=============================================================
//	Add/Remove dynamic command methods
//=============================================================


} //	namespace
